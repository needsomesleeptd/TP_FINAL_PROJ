name: Run tests on any Push event
# Запуск при любом push евенте в любой ветке, за исключением релизных тэгов.
# Они будут тестироваться перед сборкой
# Михаил токсик
on:
  push:
    branches:
      - 'release-*'

env:
  LOGIN: ${{ secrets.DOCKER_LOGIN }}
  NAME: ${{ secrets.DOCKER_NAME }}

jobs:
  push_redis-go-server:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./meet_match/net
    steps:
      - uses: actions/checkout@v2
      - name: Login to docker.io
        run:  echo ${{ secrets.DOCKER_PWD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build -t $LOGIN/$NAME:${GITHUB_REF:11}_redis-go-server -f Dockerfile .
      - name: Push image to docker.io
        run: docker push $LOGIN/$NAME:${GITHUB_REF:11}_redis-go-server

  deploy:
    needs: [push_redis-go-server]
    runs-on: [ubuntu-latest]
    steps:
      - name: Set tag to env
        run: echo ::set-env name=RELEASE_VERSION::$(echo ${GITHUB_REF:11})
      - name: Send webhook for deploy
        run: "curl --silent --show-error --fail -X POST ${{ secrets.DEPLOYMENT_SERVER }} -H 'Authorization: ${{ secrets.DEPLOYMENT_TOKEN }}' -H 'Content-Type: application/json' -d '{\"owner\": \"${{ secrets.DOCKER_LOGIN }}\", \"repository\": \"${{ secrets.DOCKER_NAME }}\", \"tag\": \"${{ env.RELEASE_VERSION }}\", \"ports\": {\"8080\": 8080}}'"
  
  push_python-flask-app:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./meet_match/neural_network
    steps:
      - uses: actions/checkout@v2
      - name: Login to docker.io
        run:  echo ${{ secrets.DOCKER_PWD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build -t $LOGIN/$NAME:${GITHUB_REF:11}_python-flask-app -f Dockerfile .
      - name: Push image to docker.io
        run: docker push $LOGIN/$NAME:${GITHUB_REF:11}_python-flask-app
    
  push_frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./meet_match/frontend
    steps:
      - uses: actions/checkout@v2
      - name: Login to docker.io
        run:  echo ${{ secrets.DOCKER_PWD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build -t $LOGIN/$NAME:${GITHUB_REF:11}_frontend -f Dockerfile .
      - name: Push image to docker.io
        run: docker push $LOGIN/$NAME:${GITHUB_REF:11}_frontend
  
  push_web:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./meet_match/nginx
    steps:
      - uses: actions/checkout@v2
      - name: Login to docker.io
        run:  echo ${{ secrets.DOCKER_PWD }} | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build -t $LOGIN/$NAME:${GITHUB_REF:11}_web -f Dockerfile .
      - name: Push image to docker.io
        run: docker push $LOGIN/$NAME:${GITHUB_REF:11}_web